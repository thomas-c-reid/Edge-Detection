# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1UVXB6RkTvOnPEuInLSlw8-jRzsaboqAx

**Importing Dependencies**
"""

import cv2
import os
import numpy as np
from scipy.signal import convolve2d
import matplotlib.pyplot as plt
from PIL import Image

"""**MASKS**"""

#Bj
SOBEL_ROW_MASK = np.array([[-1,0,1], 
                            [-2,0,2], 
                            [-1,0,1]])

#Bi
SOBEL_COLUMN_MASK = np.array([[-1,-2,1], 
                            [0,0,0], 
                            [1,2,1]])

#bJ
ROBERTS_ROW_MASK = np.array([[1,0], 
                            [0,-1]])

#bI
ROBERTS_COLUMN_MASK = np.array([[0,1],
                            [-1,0]])

def processImage(PATH):
    img = cv2.imread(PATH)
    img_blur = cv2.GaussianBlur(img,(3,3), 0)
    return img_blur

def Robers_Edge_Extraction(img):
    row_mask = ROBERTS_ROW_MASK.astype('uint8')
    row_mask = row_mask[:, :, np.newaxis]
    column_mask = ROBERTS_COLUMN_MASK.astype('uint8')
    column_mask = column_mask[:, :, np.newaxis]

    print(type(img))
    print("Shape of row_mask:", row_mask.shape)
    print("Shape of img:", img.shape)   

    ROW_CONVOLUTION = convolve2d(img, row_mask, mode='same')
    ROW_CONVOLUTION_PADDED = convolve2d(img, row_mask, mode='same', boundary='wrap')

    COLUMN_CONVOLUTION = convolve2d(img, column_mask, mode='same')
    COLUMN_CONVOLUTION_PADDED = convolve2d(img, column_mask, mode='same', boundary='wrap')

    # cv2.imshow("mask", ROW_CONVOLUTION)
    plt.imshow(ROW_CONVOLUTION)
    plt.show()
    plt.imshow(ROW_CONVOLUTION_PADDED)
    plt.show()
    return True

PATH = "building_grey.jpg"
img = processImage(PATH)
Robers_Edge_Extraction(img)